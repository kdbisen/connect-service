server:
  port: 8080
  servlet:
    context-path: /api/v1

spring:
  application:
    name: connect-service
  
  data:
    mongodb:
      auto-index-creation: true
  
  security:
    oauth2:
      client:
        registration:
          apigee:
            client-id: ${APIGEE_CLIENT_ID:default-client-id}
            client-secret: ${APIGEE_CLIENT_SECRET:default-secret}
            authorization-grant-type: client_credentials
            scope: read,write
          fenergo:
            client-id: ${FENERGO_CLIENT_ID:default-fenergo-client}
            client-secret: ${FENERGO_CLIENT_SECRET:default-fenergo-secret}
            authorization-grant-type: client_credentials
            scope: api
        provider:
          apigee:
            token-uri: ${APIGEE_TOKEN_URI:https://api.apigee.com/oauth/token}
          fenergo:
            token-uri: ${FENERGO_TOKEN_URI:https://api.fenergo.com/oauth/token}
  
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=5m

  integration:
    mongodb:
      database: connect-service

# Vault Configuration
vault:
  enabled: ${VAULT_ENABLED:true}
  address: ${VAULT_ADDR:https://vault.example.com}
  role: ${VAULT_ROLE:connect-service}
  auth-path: ${VAULT_AUTH_PATH:kubernetes}
  secret-path: ${VAULT_SECRET_PATH:secret/connect-service}
  cert-path: ${VAULT_CERT_PATH:pki/issue/connect-service}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.adyanta.connect: DEBUG
    org.springframework.integration: INFO
    org.springframework.security: INFO
    org.springframework.vault: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
  file:
    name: "/app/logs/connect-service.log"
    max-size: "100MB"
    max-history: 30
    total-size-cap: "3GB"

# External API Configuration
external:
  apis:
    xml-to-json:
      base-url: ${XML_TO_JSON_API_URL:https://api.example.com/xml-to-json}
      timeout: 30000
      retry-attempts: 3
    fenergo:
      base-url: ${FENERGO_API_URL:https://api.fenergo.com/v1}
      timeout: 60000
      retry-attempts: 3

# Processing Configuration
processing:
  async:
    core-pool-size: 10
    max-pool-size: 50
    queue-capacity: 1000
  retry:
    max-attempts: 3
    backoff-delay: 1000
    max-delay: 10000

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    display-request-duration: true
    display-operation-id: true
    show-extensions: true
    show-common-extensions: true
    try-it-out-enabled: true
    filter: true
  show-actuator: true

# Advanced MongoDB (SSL/TLS) Configuration
mongodb:
  uri: ${MONGODB_URI:mongodb://connect-service@mongodb:27017/connect-service?authSource=admin}
  database: ${MONGODB_DATABASE:connect-service}
  password: ${MONGODB_PASSWORD:}
  ssl:
    enabled: ${MONGODB_SSL_ENABLED:false}
    keyStorePath: ${MONGODB_KEYSTORE_PATH:}
    keyStorePassword: ${MONGODB_KEYSTORE_PASSWORD:}
    keyStoreType: ${MONGODB_KEYSTORE_TYPE:PKCS12}
    trustStorePath: ${MONGODB_TRUSTSTORE_PATH:}
    trustStorePassword: ${MONGODB_TRUSTSTORE_PASSWORD:}
    trustStoreType: ${MONGODB_TRUSTSTORE_TYPE:PKCS12}
    disableHostNameVerification: ${MONGODB_SSL_DISABLE_HOSTNAME_VERIFICATION:false}
